http://iantonov.me/page/come-git-some-prochitaj-etu-statju-ili-tvoi-ishodniki-umrut



git branch <имя ветки> — создать новую ветку;
git branch –list — вывести список всех созданных веток;
git help <Имя команды> — вывести справку по определенной команде;
git commit –amend — сделать последний коммит еще раз;
git add <Имя файла|маска> — подготовить файлы (добавить в версионный контроль);
git reset <Имя файла> — убрать файл из индекса;
git checkout <имя ветки> — переключится на ветку;
git status — получить текущее состояние файлов проекта;
git clone <Источник> — клонировать существующий репозиторий;
git diff — отобразить список неиндексированных изменений;
git diff –cached — вывести список изменений, которые войдут в следующий коммит;
git commit -m <комментарий> — сделать коммит (фиксацию изменений) с произвольным комментарием;
git fetch — получить все изменения из репозитория;
git push <ветка> — закинуть свои изменения на удаленный сервер в определенную ветку;
git add -u — подготовить все измененные файлы;
git init — создать директорию Git в текущем каталоге;
git diff –staged — сравнить индексированные файлы с последним коммитом;
git rm <Имя файла> — удалить файл из индекса;
git log — отобразить историю коммитов;
git checkout – <Имя файла> — отменить изменения, сделанные в файле;
git remote -v — просмотреть список соответствия алиасов и URL;
git remote add <алиас> — добавить сокращение для URL;
git tag <Имя метки> — добавить метку;
git merge <Имя ветки> — слияние с веткой;
git branch -d <Имя ветки> — удалить ветку.


==============================================

yuriy@dell3900lmwork:~/Git/drupal-modules/paragraphs$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

Стандартные команды Git используемые в различных ситуациях:

создание рабочей области (смотрите также: git help tutorial)
   clone      Клонирование репозитория в новый каталог
   init       Создание пустого репозитория Git или переинициализация существующего

работа с текущими изменениями (смотрите также: git help everyday)
   add        Добавление содержимого файла в индекс
   mv         Перемещение или переименование файла, каталога или символьной ссылки
   reset      Сброс текущего состояния HEAD на указанное состояние
   rm         Удаление файлов из рабочего каталога и индекса

просмотр истории и текущего состояния (смотрите также: git help revisions)
   bisect     Выполнить двоичный поиск изменения, которое вносит ошибку
   grep       Вывод строк, соответствующих шаблону
   log        Вывод истории коммитов
   show       Вывод различных типов объектов
   status     Вывод состояния рабочего каталога

выращивание, отметка и настройка вашей общей истории
   branch     Вывод списка веток,  их создание или удаление
   checkout   Переключение веток или восстановление файлов в рабочем каталоге
   commit     Запись изменений в репозиторий
   diff       Вывод разницы между коммитами, коммитом и рабочим каталогом и т.д.
   merge      Объединение одной или нескольких историй разработки вместе
   rebase     Повторно применить коммиты над верхушкой другой ветки
   tag        Создание метки, вывод списка, удаление или проверка метки, подписанной с помощью GPG

совместная работа (смотрите также: git help workflows)
   fetch      Загрузка объектов и ссылок из другого репозитория
   pull       Извлечение изменений и объединение с другим репозиторием или локальной веткой
   push       Обновление внешних ссылок и связанных объектов

«git help -а» и «git help -g» выводит список доступных подкоманд и
некоторые руководства по темам. Запустите «git help <команда>» или
«git help <термин>», чтобы прочесть о конкретных подкоманде или теме.




